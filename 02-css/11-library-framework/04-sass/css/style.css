@charset "UTF-8";
/* 
    ajouter "..." derière un paramètre, permet de faire contenir un nombre infini de paramètre, dans une variable.
*/
ul {
  background-color: cornflowerblue;
  /* 
      @for permet de créer une boucle
      allant du chiffre indiqué après "from"
      à celui indiqué après "to"
      cette boucle va répéter l'action entre accolade en remplaçant la valeur de "$i" à chaque fois
  */
}
ul .truc1 {
  font-size: 16px;
}
ul .truc2 {
  font-size: 26px;
}
ul .truc3 {
  font-size: 36px;
}
ul .truc4 {
  font-size: 46px;
}
ul .truc5 {
  font-size: 56px;
}

h1 {
  color: red;
}

section.sass {
  background-color: aquamarine;
}
section.sass h2 {
  background-color: brown;
  padding: 5px;
}
section.sass h2 span {
  font-style: italic;
}
section.sass h2:hover {
  transform: scale(1.2);
}

.scss, header {
  background-color: violet;
}

/* 
    Les extends permettent d'écrire un morceau de code et de les réutiliser ailleurs.
    ils sont déclaré avec un "%" suivi d'un nom.
*/
.copy, .menu, main ul, header {
  display: flex;
  justify-content: center;
  align-items: center;
}

header {
  /* 
      On utilisera @extend pour appeler toute les propriétés d'un extend ou d'une classe.
  */
}

/* 
    Les mixins vont ressembler aux extends, si ce n'est qu'elles sont plus paramétrable.
    Elles se déclarent avec "@mixin unNom()"

    On peut ajouter des propriétés sous forme de variable à nos mixins, celles ci devront alors être transmise lors de l'appelle.
    En ajoutant ":uneValeur" après une propriété, celle ci prendra cette valeur par défaut, si aucune ne lui ai transmise.
*/
.copy {
  font-size: 3rem;
  background-color: paleturquoise;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.menu {
  font-size: 3rem;
  background-color: mediumpurple;
  position: absolute;
  top: 20px;
  left: 80vw;
  transform: translate(-50%, 100%);
}

/* 
    Une fonction permet de prendre une valeur en paramètre, et de la modifier avant de la renvoyer,
    ici par exemple on prend une couleur,
    on cherche la couleur complémentaire,
    on l'éclairci un peu, 
    puis on la renvoi avec "@return"
*/
.copy {
  color: rgb(194.1145251397, 224.1284916201, 132.3715083799);
}

.copy {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
}

.menu {
  width: 10rem;
  height: 5rem;
  border-radius: 5px;
}

/*# sourceMappingURL=style.css.map */
